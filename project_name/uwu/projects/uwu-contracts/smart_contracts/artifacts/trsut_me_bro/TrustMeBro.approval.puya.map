{
  "version": 3,
  "sources": [
    "../../trsut_me_bro/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;AAAA;;AAiBK;;AAAA;AAAA;AAAA;;AAAA;AAjBL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiBK;;;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AAXL;;;AAAA;AAWK;;;AAAA;;AANA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AALL;;;AAAA;AAAA;;AAAA;;;AAAA;AAKK;;;AAAA;;AAAL;;;AAEQ;AAAA;;AAAA;AACA;AAAA;;AAAA;;AAGR;;;AAEe;;AAAc;;AAAd;AAAP;AACA;AAAA;;AAAA;;AAGR;;;AAEe;;AAAc;;AAAd;AAAP;AACW;;AAAqD;AAAA;AAAA;AAAA;AAArD;AAAA;;AAAA;;AAAA;;AAAJ;AAAP;AAEO;;AAAA;;AAAmB;;AAAnB;AAAP;AAEO;;AAAA;;AAAiB;;AAAqB;;AAArB;AAAjB;AAAP;AAEA;AAEoB;;AACF;;;;;;;AAHlB;;;;AAAA;;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0"
    },
    "5": {
      "op": "bytecblock \"assetid\" \"unitaryprice\""
    },
    "28": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "30": {
      "op": "bz main_after_if_else@9",
      "stack_out": []
    },
    "33": {
      "op": "pushbytess 0x878cbb3d 0xcc760037 0x1574535a // method \"create_application(asset,uint64)void\", method \"set_price(uint64)void\", method \"opt_in_to_asset(pay)void\"",
      "defined_out": [
        "Method(create_application(asset,uint64)void)",
        "Method(opt_in_to_asset(pay)void)",
        "Method(set_price(uint64)void)"
      ],
      "stack_out": [
        "Method(create_application(asset,uint64)void)",
        "Method(set_price(uint64)void)",
        "Method(opt_in_to_asset(pay)void)"
      ]
    },
    "50": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(create_application(asset,uint64)void)",
        "Method(opt_in_to_asset(pay)void)",
        "Method(set_price(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(create_application(asset,uint64)void)",
        "Method(set_price(uint64)void)",
        "Method(opt_in_to_asset(pay)void)",
        "tmp%2#0"
      ]
    },
    "53": {
      "op": "match main_create_application_route@3 main_set_price_route@4 main_opt_in_to_asset_route@5",
      "stack_out": []
    },
    "61": {
      "block": "main_after_if_else@9",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "62": {
      "op": "return",
      "stack_out": []
    },
    "63": {
      "block": "main_opt_in_to_asset_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "65": {
      "op": "!",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "66": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "67": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "69": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "70": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "72": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0",
        "1"
      ]
    },
    "73": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "74": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "75": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "77": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "78": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "79": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "80": {
      "callsub": "smart_contracts.trsut_me_bro.contract.TrustMeBro.opt_in_to_asset",
      "op": "callsub opt_in_to_asset",
      "stack_out": []
    },
    "83": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "84": {
      "op": "return",
      "stack_out": []
    },
    "85": {
      "block": "main_set_price_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "87": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "88": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "89": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "91": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "92": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "95": {
      "op": "btoi",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "96": {
      "callsub": "smart_contracts.trsut_me_bro.contract.TrustMeBro.set_price",
      "op": "callsub set_price",
      "stack_out": []
    },
    "99": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "100": {
      "op": "return",
      "stack_out": []
    },
    "101": {
      "block": "main_create_application_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "103": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "104": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "105": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "107": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "108": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "109": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "112": {
      "op": "btoi",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "113": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "115": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "118": {
      "op": "btoi",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "119": {
      "callsub": "smart_contracts.trsut_me_bro.contract.TrustMeBro.create_application",
      "op": "callsub create_application",
      "stack_out": []
    },
    "122": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "123": {
      "op": "return",
      "stack_out": []
    },
    "124": {
      "subroutine": "smart_contracts.trsut_me_bro.contract.TrustMeBro.create_application",
      "params": {
        "asset_id#0": "uint64",
        "unitary_price#0": "uint64"
      },
      "block": "create_application",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "127": {
      "op": "bytec_0 // \"assetid\"",
      "defined_out": [
        "\"assetid\""
      ],
      "stack_out": [
        "\"assetid\""
      ]
    },
    "128": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"assetid\"",
        "asset_id#0 (copy)"
      ],
      "stack_out": [
        "\"assetid\"",
        "asset_id#0 (copy)"
      ]
    },
    "130": {
      "op": "app_global_put",
      "stack_out": []
    },
    "131": {
      "op": "bytec_1 // \"unitaryprice\"",
      "defined_out": [
        "\"unitaryprice\""
      ],
      "stack_out": [
        "\"unitaryprice\""
      ]
    },
    "132": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"unitaryprice\"",
        "unitary_price#0 (copy)"
      ],
      "stack_out": [
        "\"unitaryprice\"",
        "unitary_price#0 (copy)"
      ]
    },
    "134": {
      "op": "app_global_put",
      "stack_out": []
    },
    "135": {
      "retsub": true,
      "op": "retsub"
    },
    "136": {
      "subroutine": "smart_contracts.trsut_me_bro.contract.TrustMeBro.set_price",
      "params": {
        "unitary_price#0": "uint64"
      },
      "block": "set_price",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "139": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "141": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "143": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "144": {
      "op": "assert",
      "stack_out": []
    },
    "145": {
      "op": "bytec_1 // \"unitaryprice\"",
      "defined_out": [
        "\"unitaryprice\""
      ],
      "stack_out": [
        "\"unitaryprice\""
      ]
    },
    "146": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"unitaryprice\"",
        "unitary_price#0 (copy)"
      ],
      "stack_out": [
        "\"unitaryprice\"",
        "unitary_price#0 (copy)"
      ]
    },
    "148": {
      "op": "app_global_put",
      "stack_out": []
    },
    "149": {
      "retsub": true,
      "op": "retsub"
    },
    "150": {
      "subroutine": "smart_contracts.trsut_me_bro.contract.TrustMeBro.opt_in_to_asset",
      "params": {
        "mbrpay#0": "uint64"
      },
      "block": "opt_in_to_asset",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "153": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "155": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "157": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "158": {
      "op": "assert",
      "stack_out": []
    },
    "159": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "161": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0"
      ]
    },
    "162": {
      "op": "bytec_0 // \"assetid\"",
      "defined_out": [
        "\"assetid\"",
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "0",
        "\"assetid\""
      ]
    },
    "163": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "164": {
      "error": "check self.assetid exists",
      "op": "assert // check self.assetid exists",
      "stack_out": [
        "tmp%3#0",
        "maybe_value%0#0"
      ]
    },
    "165": {
      "op": "swap",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "166": {
      "op": "dig 1",
      "defined_out": [
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%3#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "168": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "170": {
      "op": "bury 1",
      "stack_out": [
        "maybe_value%0#0",
        "tmp%5#0"
      ]
    },
    "172": {
      "op": "!",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%6#0"
      ]
    },
    "173": {
      "op": "assert",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "174": {
      "op": "frame_dig -1",
      "defined_out": [
        "maybe_value%0#0",
        "mbrpay#0 (copy)"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "mbrpay#0 (copy)"
      ]
    },
    "176": {
      "op": "gtxns Receiver",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%7#0"
      ]
    },
    "178": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "180": {
      "op": "==",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%9#0"
      ]
    },
    "181": {
      "op": "assert",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "182": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%0#0",
        "mbrpay#0 (copy)"
      ]
    },
    "184": {
      "op": "gtxns Amount",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%10#0"
      ]
    },
    "186": {
      "op": "global MinBalance",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "188": {
      "op": "global AssetOptInMinBalance",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%10#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "190": {
      "op": "+",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%10#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%10#0",
        "tmp%13#0"
      ]
    },
    "191": {
      "op": "==",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "tmp%14#0"
      ]
    },
    "192": {
      "op": "assert",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "193": {
      "op": "itxn_begin"
    },
    "194": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "196": {
      "op": "intc_1 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "197": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "maybe_value%0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "199": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "201": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "203": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "205": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "207": {
      "op": "intc_1 // 0",
      "stack_out": [
        "0"
      ]
    },
    "208": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "210": {
      "op": "itxn_submit"
    },
    "211": {
      "retsub": true,
      "op": "retsub"
    }
  }
}